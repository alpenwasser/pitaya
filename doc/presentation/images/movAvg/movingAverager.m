% Moving Averaging Filter
clear all;close all;

% Filter of Order 7, averaging 8 samples, for a rate change of 8.
% See p.7f in Bucher/Kuery.

N = 7;
b = 1/(N+1);
B = 1;
A = b*ones(1,N+1);

% Calcualte aliasing components
N_lobe = 2^8; % N_lobeumber of points per lobe in f direction
R = N+1;
f_signal=5e6;
f_s = 125e6;
fc = f_signal/(f_s/2/R);
%fc = 1;

[H, w] = freqz(A,B, R*N_lobe+1);

Hr = reshape(H(2:end), N_lobe, R)';
Hr(2:2:end, :) = Hr(2:2:end, end:-1:1);

% Calcuate maximum of aliasing components
wr = w(2:N_lobe+1);
Hrtot = max(abs(Hr(2:end, :)));

% Calculate aliasing attenuation at cutoff frequency
aliasing_max_db         = 20*log10(max(abs(Hr(2,1:floor(N_lobe*fc)))))
passband_droop_db       = 20*log10(abs(Hr(1,floor(N_lobe*fc))))
aliasing_attenuation_db = passband_droop_db - aliasing_max_db

% Without maximum
figure;
plot(w       , 20*log10(abs(H)), '-k', ...
   wr(1:floor(N_lobe*fc)), 20*log10(abs(Hr(2:end,1:floor(N_lobe*fc))))',...
   'LineWidth', 1); grid on;hold on;
line([f_signal/(f_s)*pi f_signal/(f_s)*pi],[passband_droop_db aliasing_max_db]);
line([0 1.5 * f_signal/(f_s)*pi],[passband_droop_db passband_droop_db]);
line([0 1.5 * f_signal/(f_s)*pi],[aliasing_max_db aliasing_max_db]);

% With maximum
%figure;
%plot(w       , 20*log10(abs(H)), '-k', ...
%   wr(1:floor(N_lobe*fc)), 20*log10(abs(Hr(2:end,1:floor(N_lobe*fc))))',...
%   wr(1:floor(N_lobe*fc)), 20*log10(Hrtot(1:floor(N_lobe*fc))), '-k',...
%   'LineWidth', 1); grid on

plotFile = 'movingAveragerPBAliasingComplete.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(H) (w)],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
plotFile = 'movingAveragerPBAliasingNull1Left.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(Hr(2,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
plotFile = 'movingAveragerPBAliasingNull1Right.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(Hr(3,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
plotFile = 'movingAveragerPBAliasingNull2Left.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(Hr(4,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
plotFile = 'movingAveragerPBAliasingNull2Right.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(Hr(5,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
plotFile = 'movingAveragerPBAliasingNull3Left.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(Hr(6,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
plotFile = 'movingAveragerPBAliasingNull3Right.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(Hr(7,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
plotFile = 'movingAveragerPBAliasingNull4Left.csv';
fh = fopen(plotFile,'w'); 
if fh ~= -1
    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
    fclose(fh);
end
dlmwrite(...
    plotFile,...
    [abs(Hr(8,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
    '-append',...
    'delimiter', ',',...
    'newline', 'unix'...
);
%plotFile = 'movingAveragerPBAliasingNull4Right.csv';
%fh = fopen(plotFile,'w'); 
%if fh ~= -1
%    fprintf(fh, '%s,%s\n', 'abs(H)', 'w');
%    fclose(fh);
%end
%dlmwrite(...
%    plotFile,...
%    [abs(Hr(9,1:floor(N_lobe*fc)))' (wr(1:floor(N_lobe*fc)))],...
%    '-append',...
%    'delimiter', ',',...
%    'newline', 'unix'...
%);
